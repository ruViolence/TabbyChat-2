buildscript {
    repositories {
        jcenter()
        maven {
            name 'forge'
            url 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
plugins {
    id 'org.ajoberstar.grgit' version '1.7.2'
}

apply plugin: 'net.minecraftforge.gradle.liteloader'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.ajoberstar.grgit'

ext.revision = grgit.log().size()
ext.hash = grgit.head().abbreviatedId

if (release != 'RELEASE')
    version += "-$release-$ext.revision"

minecraft {
    version = minecraft_version
    mappings = minecraft_mappings
    runDir = 'run'
    // Replace the version string
    replace(
            "@VERSION@": project.version,
            "@REVISION@": project.revision,
            "@MCVERSION@": project.minecraft.version
    )
}
sourceSets {
    main {
        ext.refMap = 'mixin.tabbychat.refmap.json'
    }
}
configurations {
    // shadow plugin doesn't play well with liteloader
    shadow
    compile.extendsFrom shadow
}
dependencies {
    testCompile 'junit:junit:4.12'

}
afterEvaluate {
    println '==========================================='
    println "   TabbyChat $version ($ext.hash)"
    println '==========================================='

    file('build.number').delete()
}
litemod.json {
    name = 'tabbychat'
    author = 'killjoy1221'
    revision = ext.revision
    mcversion = '1.12.r2'
    displayName = 'TabbyChat 2'
    description = 'Chat overhaul.'
    mixinConfigs = ['mixin.tabbychat.json']
}
manifest {
    attributes 'Implementation-Version': "$version (git ${project.hash})"
}
jar {
    from litemod
    from configurations.shadow.collect { it.isDirectory() ? it : zipTree(it) }
}
task srgJar(type: Jar) {
    classifier 'srg'
    from sourceSets.main.output
    from configurations.shadow.collect { it.isDirectory() ? it : zipTree(it) }
}

// XXX Do a PR to fg about removing these dumb defaults.
tasks.withType(Jar)*.baseName = archivesBaseName

artifacts.archives srgJar

reobf {
    srgJar {
        mappingType = 'SEARGE'
    }
}
mixin {
    defaultObfuscationEnv notch
}
